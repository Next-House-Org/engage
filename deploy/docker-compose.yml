#version: '3.7'

services:
  server:
    #image: twentycrm/twenty:${TAG:-latest}
    image: docker.nexthouse.org/nexthouse/twenty-crm-service:${TAG:-latest}
    container_name: twentycrm-server
    volumes:
      - ./server-local-data:/app/packages/twenty-server/.local-storage  # Host directory
    ports:
      - "3030:3000"
    environment:
      NODE_PORT: 3000
      PG_DATABASE_URL: postgres://${PG_DATABASE_USER}:${PG_DATABASE_PASSWORD}@${PG_DATABASE_HOST}:${PG_DATABASE_PORT}/${PG_DATABASE_NAME}
      SERVER_URL: ${SERVER_URL}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      STORAGE_TYPE: ${STORAGE_TYPE}
      STORAGE_S3_REGION: ${STORAGE_S3_REGION}
      STORAGE_S3_NAME: ${STORAGE_S3_NAME}
      STORAGE_S3_ENDPOINT: ${STORAGE_S3_ENDPOINT}
      APP_SECRET: ${APP_SECRET}
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:3000/healthz
      interval: 5s
      timeout: 5s
      retries: 20
    restart: always

  worker:
    #image: twentycrm/twenty:${TAG:-latest}
    image: docker.nexthouse.org/nexthouse/twenty-crm-service:${TAG:-latest}
    container_name: twentycrm-worker
    volumes:
      - ./server-local-data:/app/packages/twenty-server/${STORAGE_LOCAL_PATH:-.local-storage}  # Host directory
    command: ["yarn", "worker:prod"]
    environment:
      PG_DATABASE_URL: postgres://${PG_DATABASE_USER}:${PG_DATABASE_PASSWORD}@${PG_DATABASE_HOST}:${PG_DATABASE_PORT}/${PG_DATABASE_NAME}
      SERVER_URL: ${SERVER_URL}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      DISABLE_DB_MIGRATIONS: "true"
      STORAGE_TYPE: ${STORAGE_TYPE}
      STORAGE_S3_REGION: ${STORAGE_S3_REGION}
      STORAGE_S3_NAME: ${STORAGE_S3_NAME}
      STORAGE_S3_ENDPOINT: ${STORAGE_S3_ENDPOINT}
      APP_SECRET: ${APP_SECRET}
    depends_on:
      redis:
        condition: service_healthy
    restart: always

  redis:
    container_name: twentycrm-redis
    image: redis
    restart: always
    command: ["--maxmemory-policy", "noeviction"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

#volumes:
  # No volumes section needed since we are using host storage now

